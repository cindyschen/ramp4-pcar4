import{a6 as l,dt as h,V as g,du as f,v as w,J as d}from"./main-BeUku7ae.js";import{p as n}from"./SimpleRenderer-C1n9vbXR.js";import{fromJSON as u}from"./jsonUtils-D_fKvVvW.js";import{d as S}from"./FeatureSet-CBLx5E6S.js";import{S as V}from"./LayerView2D-CvTQVutn.js";import{t as b}from"./GraphicContainer-CgomWaAj.js";import{A as _}from"./GraphicsView2D-DoxWRmJD.js";import{y as T}from"./LayerView-BqOm8nnL.js";import"./preload-helper-ExcqyqRp.js";import"./commonProperties-CRfZ2mkl.js";import"./colorRamps-BBV7_3Lp.js";import"./ColorStop-D9aMpjHL.js";import"./visualVariableUtils-C2DPFbQ0.js";import"./lengthUtils-CjEs0gvV.js";import"./typeUtils-DQ5jcVRA.js";import"./ClassBreaksRenderer-nETAgSq9.js";import"./RendererLegendOptions-BEL-O0DE.js";import"./LRUCache-DfWX_T_X.js";import"./MemCache-C2l2cckh.js";import"./Version-Aj5rhRWY.js";import"./FieldsIndex-CoxDMnX-.js";import"./timeZoneUtils-CfdCygS-.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./heatmapUtils-CKuMf2v2.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./UniqueValueRenderer-KEeGDwNh.js";import"./diffUtils-CVt8E0YH.js";import"./styleUtils-COwV_RMc.js";import"./Field-Dxg96wIx.js";import"./fieldType-C7QwPDCA.js";import"./utils-BQBvadb7.js";import"./Container-BeSKFgQj.js";import"./MapView-DaqaglI8.js";import"./globalCss-NBorrh3f.js";import"./Queue-CWl5xBfB.js";import"./signal-DGMsVOH2.js";import"./CollectionFlattener-x0E0yik0.js";import"./workers-BGKsPHl1.js";import"./intl-DEF_gbwH.js";import"./projection-D3CLHR7i.js";import"./TileInfo-C82UThVd.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-hASVu0OH.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CbXtaDrk.js";import"./Map-DJRghKPK.js";import"./Basemap-CA7H-3fS.js";import"./loadAll-BU4ISsg-.js";import"./PortalItem-BNV3paps.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Bfb4HCRp.js";import"./Layer-BH9yO3iq.js";import"./TimeExtent-CI_CoSoE.js";import"./GraphicsCollection-DCdBc3MZ.js";import"./HeightModelInfo-CXOCKCis.js";import"./ReactiveMap-02nNqbmc.js";import"./Query-DV97FQ8q.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-Dyhq3tJ1.js";import"./a11yUtils-2hx8Lvau.js";import"./heightModelInfoUtils-Dt9OcScc.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-B6Z3mlyY.js";import"./utils-BDAmfO68.js";import"./utils-B3mQXSt7.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-C4sCthaM.js";import"./vec32-DtrNyzQt.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-D9_2pncl.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BJA-SMnM.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-VO4RMmsU.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-DNS4AD5B.js";import"./EffectView-D9m-44Ah.js";import"./parser-C7c__4ff.js";import"./layerViewUtils-C44ZkBvY.js";import"./AGraphicContainer-BdcMlXj9.js";import"./TechniqueInstance-BPu1RDqI.js";import"./UpdateTracking2D-B01DclrE.js";import"./dataViewUtils-PK0zx68P.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-DdtbYQJb.js";import"./VertexArrayObject-n3t8u5bb.js";import"./memoryEstimations-cv2i-8Wb.js";import"./TileContainer-BK10GN_z.js";import"./WGLContainer-CW0HV7oo.js";import"./ProgramTemplate-DXtX_HUE.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-CwPhMXEK.js";import"./OptimizedFeatureSet-sM3DMfyE.js";import"./OptimizedGeometry-DZRYMeI8.js";import"./FeatureCommandQueue-DdqYOGm7.js";import"./CIMSymbolHelper-BS_b78_v.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-Bia1zqir.js";import"./Rect-CQs40EYt.js";import"./rasterizingUtils-BDuxV74Q.js";import"./floatRGBA-TOgP7R8q.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-B0ruzvK6.js";import"./ShaderBuilder-BzkUtQ0f.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-CGHIqmmY.js";import"./OverrideHelper-C4vXe7F2.js";import"./colorUtils-EyOwoxZy.js";import"./callExpressionWithFeature-CIDn6mTA.js";import"./quantizationUtils-C-R_vtRq.js";import"./FeatureMetadata-D8IdMS3h.js";import"./queryUtils-Dkhn1w7c.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DWteLnNQ.js";import"./TimeOnly-rsT3AZjN.js";import"./labelUtils-BDnPdx4J.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-WPWN72DM.js";import"./dehydratedFeatures-CVpS3pxK.js";let y=class extends V(T){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const i=this._popupTemplates.get(r),e=r.hitTest(t);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=i;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:t}))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=S.fromJSON(p),e=new g(i.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new b(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>this.layer?.polygonSymbol,t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>this.layer?.lineSymbol,t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>this.layer?.pointSymbol,t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Qi=y;export{Qi as default};
